---
# tasks file for creation
- name: Reset Kubernetes component in master
  become: true
  shell: "kubeadm reset --force"
  register: reset_cluster_master
  # TODO: check what happens

- name: Print reset master
  debug: var=reset_cluster_master

- name: Generate kube token in master
  command: kubeadm token generate
  register: kube_token_output
  run_once: true

- name: Save kube token in master
  set_fact:
    kubeadm_token: "{{ kube_token_output.stdout }}"

- name: Print out kube_token in master
  debug: var=kubeadm_token

- name: Init Kubernetes cluster - master node
  #when: reset_cluster_master is succeeded
  become: true
  shell: |
    kubeadm init --pod-network-cidr 10.244.0.0/16 \
                 --token {{ kubeadm_token }} \
                 --apiserver-advertise-address {{ ansible_host }} \
                 --node-name {{ ansible_hostname }}
  register: init_cluster_master

- name: Print init master
  debug: var=init_cluster_master

- name: Setup kubeconfig for regular user - 1) create $HOME/.kube directory
  become: true
  file:
    path: /home/{{ ansible_user }} /.kube
    state: directory

- name: Setup kubeconfig for regular user - 2) copy /etc/kubernetes/admin.conf and 3) change owner/group
  become: true
  copy:
    src: '/etc/kubernetes/admin.conf'
    remote_src: yes
    dest: '/home/{{ ansible_user }}/.kube/config'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

- name: Install Pod network - using flannel
  become: yes
  become_user: '{{ ansible_user }}'
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  register: installPodNetwork

