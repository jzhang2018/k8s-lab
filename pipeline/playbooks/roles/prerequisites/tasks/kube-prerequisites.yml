---
- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: 'yes'  # type of string
    update_cache: yes
    cache_valid_time: 86400 #One day

#- name: Install aptitude using apt
#  become: true
#  apt:
#    name: aptitude
#    state: latest
#    update_cache: yes
#    force_apt_get: yes

- name: Install required system packages
  become: true
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']

- name: Add Docker GPG apt Key
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    validate_certs: no

- name: Add Docker Repository
  become: true
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Install docker-ce
  become: true
  apt:
    update_cache: yes
    name: docker-ce
    state: latest

- name: Install Docker Module for Python
  become: true
  pip:
    name: docker

- name: Setup (copy) Docker daemon configuration file
  become: true
  copy:
    src: 'daemon.json'
    dest: '/etc/docker/daemon.json'

- name: Create Docker service directory
  become: true
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Enable Docker systemd service
  become: true
  systemd:
    daemon_reload: yes
    name: docker
    state: started
    enabled: yes

- name: Add Kubernetes apt key
  become: true
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    validate_certs: no

- name: Add kubernates repository into sources list
  become: true
  apt_repository:
    filename: kubernetes
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    #repo: deb http://packages.cloud.google.com/apt/ kubernetes-xenial main
    state: present
    update_cache: yes

- name: Remove swapfile from /etc/fstab
  become: true
  mount:
    name: swap
    fstype: swap
    state: absent

- name: Disable swap
  become: true
  command: swapoff -a
 # when: ansible_swaptotal_mb > 0
 # TODO: when to call it? At creation time?

- name: Install kubelet
  become: true
  apt:
    name: kubelet
    state: present
    update_cache: yes

- name: Install kubeadm
  become: true
  apt:
    name: kubeadm
    state: present
    update_cache: yes

- name: Install kubectl
  become: true
  apt:
    name: kubectl
    state: present
    update_cache: yes

- name: Test kubeadm connetion 'pull kube images'
  become: true
  shell: kubeadm config images pull
  register: testmsg

- name: Print out test msg
  debug: var=testmsg
